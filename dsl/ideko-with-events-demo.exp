workflow ExampleWF {

  define task ReadData;
  define task AddPadding;
  define task SplitData;
  define task TrainModel;

  START -> ReadData -> AddPadding -> SplitData -> TrainModel -> END;

    
  configure task ReadData {
    implementation "tasks/ExampleWF/read_data.py";
    dependency "tasks/ExampleWF/src/**";
  }

  configure task AddPadding {
      implementation "tasks/ExampleWF/add_padding.py";
      dependency "tasks/ExampleWF/src/**";
    }

  configure task SplitData {
      implementation "tasks/ExampleWF/split_data.py";
      dependency "tasks/ExampleWF/src/**";
  }

  configure task TrainModel {
      dependency "tasks/ExampleWF/src/**";
  }

define data InputData;

configure data InputData {
    //path "datasets/subset/**";
    path "datasets/full-dataset/**";
}

InputData --> ReadData;

}


workflow FDW1 from ExampleWF {
  configure task TrainModel {
      implementation "tasks/ExampleWF/train_nn.py";
  }
}

workflow FDW2 from ExampleWF {
  configure task TrainModel {
      implementation "tasks/ExampleWF/train_rnn.py";
  }
}


experiment EXP {
    control {
                S1 -> E1;
                E1 ?-> S2 {condition "True"};
                E1 ?-> S3 {condition "False"};
                S2 -> E2;
                S3 -> E2;
                E2 -> S4;



    }

    event E1 {
        type automated;
        task check(average, "accuracy", ">80", S1);
    }
    event E2 {
        type manual;
        task review_and_modify(average, "accuracy" , S3 , S4);
    }

    space S1 of FDW1 {
    strategy gridsearch;
    param epochs_vp = range(50,100,20);
    param batch_size_vp = enum(32,64);

    configure task TrainModel {
         param epochs = epochs_vp;
         param batch_size = batch_size_vp;
    }
}

space S2 of FDW1 {
    strategy gridsearch;
    param epochs_vp = range(150,200,5);
    param batch_size_vp = enum(32, 64, 128);

    configure task TrainModel {
         param epochs = epochs_vp;
         param batch_size = batch_size_vp;
    }
}

space S3 of FDW2 {
    strategy gridsearch;
    param epochs_vp = range(60,120,20);
    param batch_size_vp = enum(64, 128);

    configure task TrainModel {
         param epochs = epochs_vp;
         param batch_size = batch_size_vp;
    }
}


space S4 of FDW2 {
    strategy randomsearch;
    param epochs_vp = range(150,200,5);
    param batch_size_vp = enum(32, 64, 128);
    runs = 5;

    configure task TrainModel {
         param epochs = epochs_vp;
         param batch_size = batch_size_vp;
    }
}}
